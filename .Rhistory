2*2
2+2
2-2
2/2
3^2
x <- 1:20
y <- c(3,4,5,6,7,8,9,10,15,21)
rep(10,3)
seq(from=100, to=300, by=100)
m <- matrix(nrow = 2, ncol = 3)
m <- matrix(1:6, nrow=2, ncol = 3)
dim(m)
View(m)
m[1,]
m[2,]
m[,3]
m[,2]
m[2,2]
m[2,1]
cbind(x,y)
rbind(x,y)
class(x)
as.integer(x)
as.complex(x)
as.character(x)
as.numeric(x)
df <- data.frame(x,y)
df$x
df$y
2*2                                   #Sinal de multiplicaÃ§Ã£o
2+2                                   #Sinal de soma
2-2                                   #Sinal de subtraÃ§Ã£o
2/2                                   #Sinal de divisÃ£o
3^2
x <- 1:20                             #Cria um objeto de x cujos elementos sÃ£o va,ores de 1 atÃ© 20
y <- c(3,4,5,6,7,8,9,10,15,21)        #Cria o vetor y, contatenando os valores 3,4,5,6,7,8,9,10,15,21
rep(10,3)                             #Repete o 10 trÃªs vezes
seq(from=100, to=300, by=100)         #Cria uma sequencia do 100 ao 300 de 100 em 100.
m <- matrix(nrow = 2, ncol = 3)       #Cria uma matrix de nome "m", vazia, com duas lin has e trÃªs colunas
m <- matrix(1:6, nrow=2, ncol = 3)    #Cria uma matrix de nome "m", de duas linhas e trÃªs colunas, cujos elementos 1:6  (1,2,3,4,5 e 6) sÃ£o preencheidos por colunas
dim(m)                                #Retorna as dimensÃµes (nÃºmero de linhas e colunas) da matriz "m"
View(m)                               #Visualiza a matriz "m"
m[1,]                                 #Visualiza a primeira linha
m[2,]                                 #Visualiza a segunda linha
m[,3]                                 #Visualiza a terceira coluna
m[,2]                                 #Visualiza a segunda coluna
m[2,2]                                #Visualiza o elemento da segunda linha e segunda coluna
m[2,1]                                #Visualiza o elemento da segunda linha e primeira coluna
cbind(x,y)                            #Ordena os objetos x e y em colunas criando-se uma matriz
rbind(x,y)                            #Ordena os objetos x e y em linhas criando-se uma matriz
class(x)                              #Retorna a classe do objeto
as.integer(x)                         #Altera a classe do objeto x para inteiro
as.complex(x)                         #Altera a classe do objeto x para nÃºmeros complexos
as.character(x)                       #Altera a classe do objeto x para caracteres
as.numeric(x)                         #Altera a classe do objeto x para numÃ©rico
df <- data.frame(x,y)                 #Cria a tabela cujo nome Ã© "df" ordenando x e y em colunas
df$x                                  #Retorna a variavel "x" dentro da tabela "df"
df$y                                  #Retorna a variavel "y" dentro da tabela "df"
View(plot(br$PIB))
rm(lits=ls())
x <- 1:20                 #Cria objeto x cujos elementos sÃƒÂ£o os valores inteiros de 1 a 20
y <- 20:30                #Cria objeto y cujos elementos sÃƒÂ£o os valores inteiros de 20 a 30
#Operadores de ComparaÃƒÂ§ÃƒÂ£o
x>10                      #Retorna como verdaeiros (TRUE)  os valores maiores que 10
x<10                      #Retorna como verdaeiros (TRUE)  os valores menores que 10
x>=3                      #Retorna como verdaeiros (TRUE)  os valores maiores e iguais a 3
x<=2                      #Retorna como verdaeiros (TRUE)  os valores menores ou iguais a 2
x==5                      #Retorna como verdaeiros (TRUE)  os valores iaguais a 5
getwd()
setwd("c:/EconometriaA")
install.packages("pwt8")
library(pwt8)
data("pwt8.0")
View(pwt8.0)
br <- subset(pwt8.0, country=="Brazil", select = c("rgdpna","avh","xr"))
colnames(br) <-  c("PIB","Trabalho","CÃƒÂ¢mbio")
plot(br$PIB)
plot(br$PIB, type = "l")
dados <- ts(br, start = 1950, frequency = 1)
plot(dados, main="Dados Barsileiros", xlab="Ano")
plot(dados, main="Dados Barsileiros", xlab="Ano", plot.type = "single")
plot(dados, col="blue", main="Dados Barsileiros", xlab="Ano", plot.type = "single")
plot(dados, col=c("blue","red","green"), main="Dados Barsileiros", xlab="Ano", plot.type = "single")
write.csv(br,file = "br.csv")
source('C:/EconometriaA/2- Series Temporais.R')
install.packages("pwt8")
x <- 1:20                 #Cria objeto x cujos elementos sÃƒÂ£o os valores inteiros de 1 a 20
y <- 20:30                #Cria objeto y cujos elementos sÃƒÂ£o os valores inteiros de 20 a 30
#Operadores de ComparaÃƒÂ§ÃƒÂ£o
x>10                      #Retorna como verdaeiros (TRUE)  os valores maiores que 10
x<10                      #Retorna como verdaeiros (TRUE)  os valores menores que 10
x>=3                      #Retorna como verdaeiros (TRUE)  os valores maiores e iguais a 3
x<=2                      #Retorna como verdaeiros (TRUE)  os valores menores ou iguais a 2
x==5                      #Retorna como verdaeiros (TRUE)  os valores iaguais a 5
#NoÃƒÂ§ÃƒÂµes BÃƒÂ¡sicas - ContinuaÃƒÂ§ÃƒÂ£o
ls()                      #Retorna uma lista de todos objetos criados
rm(x)                     #Apaga objeto x
rm(list = "x","y")        #Apaga uma lista de objetos, no caso os objetos listados foram x e y
rm(list=ls())             #Apaga todos os objetos
getwd()                   #Retorno o atual diretÃƒÂ³rio de trabalho do R
setwd("c:/EconometriaA")  #Altera a pasta de trabalho do R
#Carregando e Instalando Pacotes
install.packages("pwt8")                       #Instala o Pacote PWT8.0
library(pwt8)                                  #Carrega o pacote PWT8.0
data("pwt8.0")                                 #Carrega os dados elencados "pwt8.0" dispoinÃƒ­veis no pacote
View(pwt8.0)                                   #Visualiza os dados na tabela pwt8.0
#Extraindo dados de tabelas e renomeando colunas
br <- subset(pwt8.0, country=="Brazil", select = c("rgdpna","avh","xr"))  #Cria a tabela "br" com dados das linhas que assumem o valor "country" (paÃƒ­s) igual a "Brazil", selecionando as colunas cujas variÃƒÂ¡veis sÃƒÂ£o "rgdpna" (PIB), "avh" (TRABALHO)  e "xr" (CÃƒÂ‚MBIO)
colnames(br) <-  c("PIB","Trabalho","CÃƒÂ¢mbio")  #Renomeia as colunas para PIB, Trabalho e CÃƒÂ¢mbio
#Criando GrÃƒÂ¡ficos
plot(br$PIB)                                   #Plota(cria um grÃƒÂ¡fico) dos valores da coluna PIB da tabela br
plot(br$PIB, type = "l")                       #Plota os valores  coluna PIB da tabela br em forma de linha.
dados <- ts(br, start = 1950, frequency = 1)   #Cria uma tabela denominada "dados" cuja estrutura ÃƒÂ© um sÃƒÂ©rie temporal com inÃƒ­cio em 1950, com peridiocidade anual(1)
plot(dados, main="Dados Barsileiros", xlab="Ano")                                #Cria um grÃƒÂ¡fico para cada uma das trÃƒÂªs variÃƒÂ¡veis
plot(dados, main="Dados Barsileiros", xlab="Ano", plot.type = "single")          #Cria um ÃƒÂºnico grÃƒÂ¡fico com as trÃƒÂªs sÃƒÂ©ries juntas
plot(dados, col="blue", main="Dados Barsileiros", xlab="Ano", plot.type = "single")                   #Cria um ÃƒÂºnico grÃƒÂ¡fico com as trÃƒÂªs sÃƒÂ©ries juntas, com linhas azuis
plot(dados, col=c("blue","red","green"), main="Dados Barsileiros", xlab="Ano", plot.type = "single")   #Cria um ÃƒÂºnico grÃƒÂ¡fico com as trÃƒÂªs sÃƒÂ©ries juntas, com linhas azuis para  PIB, vermelha para trabalho e verde para o cÃƒÂ¢mbio
write.csv(br,file = "br.csv")                 #Grava os dados da tabela br no arquivo br.csv
